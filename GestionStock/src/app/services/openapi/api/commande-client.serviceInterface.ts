/**
 * Gestion de stock REST API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ChangeArticleCommandeRequest } from '../model/models';
import { ChangeClientRequest } from '../model/models';
import { ChangeDateCommandeRequest } from '../model/models';
import { ChangeEtatCommandeRequest } from '../model/models';
import { ChangeQuantiteCommandeRequest } from '../model/models';
import { CommandeClientRequest } from '../model/models';
import { CommandeClientResponse } from '../model/models';
import { DeleteLigneCommandeRequest } from '../model/models';
import { PageResponseCommandeClientResponse } from '../model/models';
import { PageResponseLigneCommandeClientResponse } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface CommandeClientServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param id 
     */
    deleteCommandeClient(id: number, extraHttpRequestParams?: any): Observable<object>;

    /**
     * 
     * 
     * @param deleteLigneCommandeRequest 
     */
    deleteLigneCommandeClient(deleteLigneCommandeRequest: DeleteLigneCommandeRequest, extraHttpRequestParams?: any): Observable<number>;

    /**
     * 
     * 
     * @param page 
     * @param size 
     */
    findAllCommandeClients(page?: number, size?: number, extraHttpRequestParams?: any): Observable<PageResponseCommandeClientResponse>;

    /**
     * 
     * 
     * @param id 
     * @param page 
     * @param size 
     */
    findAllLigneCommandeClientsByArticle(id: number, page?: number, size?: number, extraHttpRequestParams?: any): Observable<PageResponseLigneCommandeClientResponse>;

    /**
     * 
     * 
     * @param id 
     * @param page 
     * @param size 
     */
    findAllLigneCommandeClientsByCommandeClient(id: number, page?: number, size?: number, extraHttpRequestParams?: any): Observable<PageResponseLigneCommandeClientResponse>;

    /**
     * 
     * 
     * @param code 
     */
    findCommandeClientByCode(code: string, extraHttpRequestParams?: any): Observable<CommandeClientResponse>;

    /**
     * 
     * 
     * @param id 
     */
    findCommandeClientById(id: number, extraHttpRequestParams?: any): Observable<CommandeClientResponse>;

    /**
     * 
     * 
     * @param page 
     * @param size 
     */
    findLigneCommandeClients(page?: number, size?: number, extraHttpRequestParams?: any): Observable<PageResponseLigneCommandeClientResponse>;

    /**
     * 
     * 
     * @param commandeClientRequest 
     */
    saveCommandeClient(commandeClientRequest: CommandeClientRequest, extraHttpRequestParams?: any): Observable<number>;

    /**
     * 
     * 
     * @param changeClientRequest 
     */
    updateCommandeClientClient(changeClientRequest: ChangeClientRequest, extraHttpRequestParams?: any): Observable<number>;

    /**
     * 
     * 
     * @param changeDateCommandeRequest 
     */
    updateCommandeClientDateCommande(changeDateCommandeRequest: ChangeDateCommandeRequest, extraHttpRequestParams?: any): Observable<number>;

    /**
     * 
     * 
     * @param changeEtatCommandeRequest 
     */
    updateCommandeClientEtat(changeEtatCommandeRequest: ChangeEtatCommandeRequest, extraHttpRequestParams?: any): Observable<number>;

    /**
     * 
     * 
     * @param changeArticleCommandeRequest 
     */
    updateLigneCommandeClientArticle(changeArticleCommandeRequest: ChangeArticleCommandeRequest, extraHttpRequestParams?: any): Observable<number>;

    /**
     * 
     * 
     * @param changeQuantiteCommandeRequest 
     */
    updateLigneCommandeClientQuantite(changeQuantiteCommandeRequest: ChangeQuantiteCommandeRequest, extraHttpRequestParams?: any): Observable<number>;

}
