/**
 * Gestion de stock REST API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ChangeArticleCommandeRequest } from '../model/models';
import { ChangeDateCommandeRequest } from '../model/models';
import { ChangeEtatCommandeRequest } from '../model/models';
import { ChangeFournisseurRequest } from '../model/models';
import { ChangeQuantiteCommandeRequest } from '../model/models';
import { CommandeFournisseurRequest } from '../model/models';
import { CommandeFournisseurResponse } from '../model/models';
import { DeleteLigneCommandeRequest } from '../model/models';
import { PageResponseCommandeFournisseurResponse } from '../model/models';
import { PageResponseLigneCommandeFournisseurResponse } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface CommandeFournisseurServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param id 
     */
    deleteCommandeFournisseur(id: number, extraHttpRequestParams?: any): Observable<object>;

    /**
     * 
     * 
     * @param deleteLigneCommandeRequest 
     */
    deleteLigneCommandeFournisseur(deleteLigneCommandeRequest: DeleteLigneCommandeRequest, extraHttpRequestParams?: any): Observable<number>;

    /**
     * 
     * 
     * @param page 
     * @param size 
     */
    findAllCommandeFournisseurs(page?: number, size?: number, extraHttpRequestParams?: any): Observable<PageResponseCommandeFournisseurResponse>;

    /**
     * 
     * 
     * @param id 
     * @param page 
     * @param size 
     */
    findAllLigneCommandeFournisseursByArticle(id: number, page?: number, size?: number, extraHttpRequestParams?: any): Observable<PageResponseLigneCommandeFournisseurResponse>;

    /**
     * 
     * 
     * @param id 
     * @param page 
     * @param size 
     */
    findAllLigneCommandeFournisseursByCommandeFournisseur(id: number, page?: number, size?: number, extraHttpRequestParams?: any): Observable<PageResponseLigneCommandeFournisseurResponse>;

    /**
     * 
     * 
     * @param code 
     */
    findCommandeFournisseurByCode(code: string, extraHttpRequestParams?: any): Observable<CommandeFournisseurResponse>;

    /**
     * 
     * 
     * @param id 
     */
    findCommandeFournisseurById(id: number, extraHttpRequestParams?: any): Observable<CommandeFournisseurResponse>;

    /**
     * 
     * 
     * @param commandeFournisseurRequest 
     */
    saveCommandeFournisseur(commandeFournisseurRequest: CommandeFournisseurRequest, extraHttpRequestParams?: any): Observable<number>;

    /**
     * 
     * 
     * @param changeDateCommandeRequest 
     */
    updateCommandeFournisseurDateCommande(changeDateCommandeRequest: ChangeDateCommandeRequest, extraHttpRequestParams?: any): Observable<number>;

    /**
     * 
     * 
     * @param changeEtatCommandeRequest 
     */
    updateCommandeFournisseurEtat(changeEtatCommandeRequest: ChangeEtatCommandeRequest, extraHttpRequestParams?: any): Observable<number>;

    /**
     * 
     * 
     * @param changeFournisseurRequest 
     */
    updateCommandeFournisseurFournisseur(changeFournisseurRequest: ChangeFournisseurRequest, extraHttpRequestParams?: any): Observable<number>;

    /**
     * 
     * 
     * @param changeArticleCommandeRequest 
     */
    updateLigneCommandeFournisseurArticle(changeArticleCommandeRequest: ChangeArticleCommandeRequest, extraHttpRequestParams?: any): Observable<number>;

    /**
     * 
     * 
     * @param changeQuantiteCommandeRequest 
     */
    updateLigneCommandeFournisseurQuantite(changeQuantiteCommandeRequest: ChangeQuantiteCommandeRequest, extraHttpRequestParams?: any): Observable<number>;

}
